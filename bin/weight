#! /usr/bin/env ruby
# coding: utf-8

require "yaml"
require "pp"
require "optparse"

WIDTH = 50

## option analysis
OPTIONS = {}
op = OptionParser.new
op.on("-l", "--lighten", "Lighten all"){ OPTIONS[:lighten] = true}
op.on("-w", "--weigh"  , "Weigh all"  ){ OPTIONS[:weigh]   = true}
op.parse!(ARGV)

data_file = ARGV[0]
data = YAML.load_file data_file

new_data = {}
if OPTIONS[:lighten]
  data.each { |key, val| new_data[key] = val / 2 }
  File.open(data_file, "w"){ |io| YAML.dump(new_data, io) }
  data = new_data
elsif OPTIONS[:weigh]
  data.each { |key, val| new_data[key] = val * 2 }
  File.open(data_file, "w"){ |io| YAML.dump(new_data, io) }
  data = new_data
end

encounters = {}
data.each do |key, weight|
  #val_log2 = (Math::log(weight)/Math::log(2.0)).to_i
  power = Math::log2(weight).ceil
  encounters[power] ||= 0
  encounters[power] += 1
end
max = encounters.values.max
0.upto(16) do |power|
  num = encounters[power] || 0
  stars = "*" * (WIDTH.to_f * num / max).ceil
  printf("%6d(%4d)| #{stars} \n", 2**power, num)
end
